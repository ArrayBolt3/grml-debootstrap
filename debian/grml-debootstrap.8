.TH GRML-DEBOOTSTRAP 8
.SH NAME
grml-debootstrap \- wrapper around debootstrap for installing plain Debian via grml
.SH SYNOPSIS
.B grml-debootstrap
.RI [ options ]
.SH DESCRIPTION
This manual page documents briefly the
.B grml-debootstrap
command.
.PP
\fBgrml-debootstrap\fP is a wrapper suite around debootstrap
(and cdebootstrap if you want) for installing a plain Debian
system via grml very fast and easy.

All you have to do is adjust a few variables in configuration
file /etc/debootstrap/config and invoke grml-debootstrap without
any further options then.

A plain and base Debian system will be installed on the given
device (or directory) then. Customization of this process is
possible as well.
.SH OPTIONS
grml-debootstrap supports the following options:
.TP
.B \-h, \-\-help
Show summary of options.
.TP
.B \-v, \-\-version
Show version of program.
.SH FILES
.TP
.B /etc/debootstrap/config
Main configuration file. You have to adjust it according to your needs
before you are able to run grml-debootstrap.
.TP
.B /etc/debootstrap/chroot-script
The script executed within the new Debian system as soon as the main system
has been installed via [c]debootstrap.
.TP
.B /etc/debootstrap/locale.gen
Defines the default locales used for generating locales via locale-gen.
.TP
.B /etc/debootstrap/packages
Defines the software packages which should be installed in the new
Debian system by default.
.TP
.B /etc/debootstrap/stages/
The default directory for storing information about executed stages. Every
single function of grml-debootstrap will write 'done' to the stages directory
into a file named as the function itself if it has been executed sucessfully.
You can adjust the location of the directory via configuration variable STAGES
via /etc/debootstrap/config.  Please notice that you have to remove the stages
directory on your own if you want to re-execute grml-deboostrap after running it
successfully once. This should avoid recurrent execution by error of
grml-debootstrap (which might delete present data).
.SH CUSTOMIZATION

You can control execution of grml-debootstrap via adjusting
/etc/debootstrap/config for some main stuff.  The packages which should be
installed in the new Debian system can be defined via the file
/etc/debootstrap/packages.  If you want to put existing files to the new
Debian system you can place them into the (by default non-existing)
directories boot, etc, share, usr and var in /etc/debootstrap/. Every
existing directory will be copied to the new Debian system then.

.SH SUPPORTED RELEASES
.TP
Current status:

  +----------------+-------------+-----------------+
  | Release / Tool | debootstrap | cdebootstrap    |
  +----------------+-------------+-----------------+
  | Sarge          |  works [1]  |  works [1]      |
  +----------------+-------------+-----------------+
  | Etch           |  works      |  works          |
  +----------------+-------------+-----------------+
  | Lenny          |  works      |  works          |
  +----------------+-------------+-----------------+
  | Sid            |  works      |  works          |
  +----------------+-------------+-----------------+

[1] Please notice that Sarge is the current old-stable within Debian.
grml-debootstrap can handle the release but you really should not
use Sarge anymore unless you really know what you are doing. Choose
Etch instead.

.SH BUGS
Probably. Please send bugreports to Michael Prokop <mika@grml.org>.
.SH SEE ALSO
.BR debootstrap (8),
.BR cdebootstrap (1).
.SH AUTHOR
grml-debootstrap was written by Michael Prokop <mika@grml.org>.
.PP
This manual page was written by Michael Prokop <mika@grml.org>
for the grml project (but may be used by others).
